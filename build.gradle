plugins {
    id 'java'
}

group 'com.shadowcs.observer'
version '1.0.5'

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Not the best SC2 API but its the only one for Java so its what we are going to use
    implementation ('com.github.ShadowLordAlpha.ocraft-s2client:ocraft-s2client-bot:master-SNAPSHOT') { changing = true }

// Fast caching stuff for java
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.1'
    // Optional extensions
    implementation 'com.github.ben-manes.caffeine:guava:3.1.1'
    implementation 'com.github.ben-manes.caffeine:jcache:3.1.1'

    // SLF4J logging
    implementation (group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha7')
    implementation (group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.0-alpha7')
    testImplementation (group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.0-alpha7')

    // Lombok Annotations
    compileOnly 'org.projectlombok:lombok:1.18.+'
    annotationProcessor 'org.projectlombok:lombok:1.18.+'

    // GSON de/serialization
    implementation 'com.google.code.gson:gson:2.10.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

jar {
    archivesBaseName = "AutoObserver"

    manifest {
        attributes "Main-Class": "com.shadowcs.observer.SimpleObserver",
                'Class-Path': configurations.runtimeClasspath.files.collect { "lib/$it.name" }.join(' ')
    }
}

task zip(type: Zip) {
    from jar

    into('lib') {
        from configurations.runtimeClasspath
    }

    from('replays') {
        into 'replays'
    }
}