plugins {
    id 'java'
}

group 'com.shadowcs.optimizer'
version '0.0.1'

configurations.all {
    resolutionStrategy {

        // cache dynamic versions for 30 minutes
        cacheDynamicVersionsFor 30 * 60, 'seconds'
        // don't cache changing modules at all
        cacheChangingModulesFor 0, 'seconds'
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Not the best SC2 API but its the only one for Java so its what we are going to use
    implementation ('com.github.ShadowLordAlpha.ocraft-s2client:ocraft-s2client-bot:Allow-Multiple-requests-of-same-type-SNAPSHOT') { changing = true }

    // Object pool
    // implementation 'com.github.chrisvest:stormpot:3.2'

    // Fast caching stuff for java
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.1'
    // Optional extensions
    implementation 'com.github.ben-manes.caffeine:guava:3.1.1'
    implementation 'com.github.ben-manes.caffeine:jcache:3.1.1'

    // SLF4J logging
    implementation (group: 'org.slf4j', name: 'slf4j-api', version: '2.0.0-alpha7')
    implementation (group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.0-alpha7')
    testImplementation (group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.0-alpha7')

    implementation 'it.unimi.dsi:fastutil:8.5.6'

    // GA stuff
    implementation 'io.jenetics:jenetics:7.1.3'


    // Lombok Annotations
    compileOnly 'org.projectlombok:lombok:1.18.+'
    annotationProcessor 'org.projectlombok:lombok:1.18.+'

    // GSON de/serialization
    implementation 'com.google.code.gson:gson:2.10.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}